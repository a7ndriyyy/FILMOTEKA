{"version":3,"file":"static/js/435.9db2a51f.chunk.js","mappings":"uNAEaA,EAAYC,EAAAA,GAAAA,IAAH,qFAMTC,EAAUD,EAAAA,GAAAA,QAAH,8F,0CCFpB,IAJc,WACZ,OAAO,wBAAI,SACZ,C,0CCgBD,IAnBgB,WACd,OACE,SAAC,KAAD,CACEE,OAAO,KACPC,MAAM,KACNC,OAAO,KACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CACZC,SAAU,WACVC,OAAQ,MACRC,KAAM,OAERC,iBAAiB,GACjBC,SAAS,GAGd,C,wIChBYC,E,OAAWb,GAAAA,GAAH,mW,mCCcrB,EAbiB,SAAC,GAAgC,IAA9Bc,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,YAAaC,EAAS,EAATA,GAEhCC,GAAWC,EAAAA,EAAAA,MACjB,OACE,yBACE,UAAC,KAAD,CAAMC,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMJ,GAA1C,WACE,gBAAKK,IAAG,UALG,mCAKH,OAAgBP,GAAeQ,IAAKT,IAC3CA,GAASA,EAAMU,UAAU,EAAG,QAHxBR,EAOZ,ECDD,EAViB,SAAC,GAAgB,IAAdS,EAAa,EAAbA,OAClB,OACE,SAACZ,EAAD,UACGY,EAAOC,KAAI,gBAAGZ,EAAH,EAAGA,MAAOE,EAAV,EAAUA,GAAID,EAAd,EAAcA,YAAd,OACV,SAAC,EAAD,CAAmBD,MAAOA,EAAOC,YAAaA,EAAaC,GAAIA,GAAhDA,EADL,KAKjB,E,gBC4BD,EA/Ba,WACX,OAA4BW,EAAAA,EAAAA,UAAS,IAArC,eAAOF,EAAP,KAAeG,EAAf,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACA,GAA0BH,EAAAA,EAAAA,WAAS,GAAnC,eAAOI,EAAP,KAAcC,EAAd,KAiBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,gHAEcC,EAAAA,EAAAA,MAFd,gBAEJC,EAFI,EAEJA,QACRR,EAAUQ,GACVN,GAAW,GAJC,gDAMZO,QAAQC,IAAI,KAAMC,SAClBP,GAAS,GACTF,GAAW,GARC,yDAAH,qDAYbI,GACD,GAAE,KAGD,SAAC,IAAD,WACE,UAAC,IAAD,YACE,wBAAI,qBACHH,IAAS,SAACS,EAAA,EAAD,IACTX,GAAU,SAAC,EAAD,CAAUJ,OAAQA,KAAa,SAACgB,EAAA,EAAD,QAIjD,C,+LCnCKC,EAAW,+BAMV,SAAeP,IAAtB,4CAAO,OAAP,oBAAO,8FACSQ,EAAAA,EAAAA,IAAA,UAAaD,EAAb,sBADT,uCACoDE,MADpD,kEAIA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8B7B,GAA9B,iFACS2B,EAAAA,EAAAA,IAAA,UAAaD,EAAb,kBAA+B1B,IADxC,uCAC+C4B,MAD/C,kEAKA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA4B9B,GAA5B,iFACS2B,EAAAA,EAAAA,IAAA,UAAaD,EAAb,kBAA+B1B,EAA/B,aADT,uCACuD4B,MADvD,kEAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA8B/B,GAA9B,iFACS2B,EAAAA,EAAAA,IAAA,UAAaD,EAAb,kBAA+B1B,EAA/B,aADT,uCACuD4B,MADvD,kEAMA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,0FAA0CC,EAA1C,+BAAiD,EAAjD,SAEGP,EAAAA,EAAAA,IAAA,UAAaD,EAAb,+BAA4CO,EAA5C,iBAA8DC,IAFjE,uCAGHN,MAHG,mEAxBPD,EAAAA,EAAAA,SAAAA,OAAwB,CACtBQ,QAFc,mC","sources":["components/App.styled.js","components/Error/Error.jsx","components/Loading/Loading.jsx","components/HomeList/HomeList.styled.js","components/HomeList/HomeItem/HomeItem.jsx","components/HomeList/HomeList.jsx","pages/Home.jsx","services/movie-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  max-width: 1100px;\n  padding: 0 16px;\n  margin: 0 auto;\n`;\n\nexport const Section = styled.section`\n  padding: 60px 0;\n  border-bottom: 1px solid #eee;\n  height: 100%;\n`;","import React from 'react';\n\nconst Error = () => {\n  return <h1>Error</h1>;\n};\n\nexport default Error;","import { ThreeDots } from 'react-loader-spinner';\nconst Loading = () => {\n  return (\n    <ThreeDots\n      height=\"80\"\n      width=\"80\"\n      radius=\"11\"\n      color=\"#1e349f\"\n      ariaLabel=\"three-dots-loading\"\n      wrapperStyle={{\n        position: 'absolute',\n        bottom: '47%',\n        left: '47%',\n      }}\n      wrapperClassName=\"\"\n      visible={true}\n    />\n  );\n};\n\nexport default Loading;","import styled from 'styled-components';\n\nexport const ListHome = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  gap: 24px;\n\n  /* li {\n    width: 200px;\n    font-size: 22px;\n    transition: all 350ms cubic-bezier(0.4, 0, 0.2, 1);\n    &:hover {\n      scale: 1.1;\n      color: #600000;\n    }\n  }\n  a {\n    text-decoration: none;\n    color: inherit;\n  } */\n`;","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst HomeItem = ({ title, poster_path, id }) => {\n  const BASE_IMG = 'https://image.tmdb.org/t/p/w200';\n  const location = useLocation();\n  return (\n    <li key={id}>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <img src={`${BASE_IMG}${poster_path}`} alt={title} />\n        {title && title.substring(0, 20)}\n      </Link>\n    </li>\n  );\n};\n\nexport default HomeItem;","import { ListHome } from './HomeList.styled';\nimport HomeItem from './HomeItem/HomeItem';\n\nconst HomeList = ({ movies }) => {\n  return (\n    <ListHome>\n      {movies.map(({ title, id, poster_path }) => (\n        <HomeItem key={id} title={title} poster_path={poster_path} id={id} />\n      ))}\n    </ListHome>\n  );\n};\n\nexport default HomeList;","import { Container, Section } from 'components/App.styled';\nimport Error from 'components/Error/Error';\nimport HomeList from 'components/HomeList/HomeList';\nimport Loading from 'components/Loading/Loading';\nimport { useEffect, useState } from 'react';\n\nimport { getMovies } from 'services/movie-api';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    const details = async () => {\n      try {\n        const { results } = await getMovies();\n        setMovies(results);\n        setLoading(true);\n      } catch (error) {\n        console.log(error.message);\n        setError(true);\n        setLoading(true);\n      }\n    };\n\n    details();\n  }, []);\n\n  return (\n    <Section>\n      <Container>\n        <h1>Trending Today! </h1>\n        {error && <Error />}\n        {loading ? <HomeList movies={movies} /> : <Loading />}\n      </Container>\n    </Section>\n  );\n};\n\nexport default Home;","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '22ba7957556991080b2d9f0336ac306f';\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport async function getMovies() {\n  return (await axios.get(`${BASE_URL}/trending/all/day`)).data;\n}\n\nexport async function getMoveDetails(id) {\n  return (await axios.get(`${BASE_URL}/movie/${id}`)).data;\n}\n\n\nexport async function getCastMovie(id) {\n  return (await axios.get(`${BASE_URL}/movie/${id}/credits`)).data;\n}\n\n\nexport async function getReviewMovie(id) {\n  return (await axios.get(`${BASE_URL}/movie/${id}/reviews`)).data;\n}\n\n\n\nexport async function getSearchMovies(queryText, page = 1) {\n  return (\n    await axios.get(`${BASE_URL}/search/movie?query=${queryText}&page=${page}`)\n  ).data;\n}"],"names":["Container","styled","Section","height","width","radius","color","ariaLabel","wrapperStyle","position","bottom","left","wrapperClassName","visible","ListHome","title","poster_path","id","location","useLocation","to","state","from","src","alt","substring","movies","map","useState","setMovies","loading","setLoading","error","setError","useEffect","details","getMovies","results","console","log","message","Error","Loading","BASE_URL","axios","data","getMoveDetails","getCastMovie","getReviewMovie","getSearchMovies","queryText","page","api_key"],"sourceRoot":""}